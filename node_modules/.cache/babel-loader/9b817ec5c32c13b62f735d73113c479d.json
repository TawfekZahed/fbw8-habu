{"ast":null,"code":"var _jsxFileName = \"/home/tawfek/Downloads/exercises/fbw9habu/src/component/Eingabe.js\";\nimport React from 'react';\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\n\nfunction Eingabe({\n  PreisSetzen,\n  hinzufuegen,\n  titel\n}) {\n  const [beschreibung, beschreibungSetzen] = React.useState('');\n  const [preis, preisSetzen] = React.useState('');\n\n  const beschreibungHaendler = e => beschreibungSetzen(e.target.value);\n\n  const preisHaendler = e => {\n    let preis = e.target.value;\n    preisSetzen(preis);\n    let preisAlsZahl = Number(preis.replace(',', '.'));\n    livePreisSetzen(isNaN(preisAlsZahl) ? 0 : preisAlsZahl);\n  };\n\n  const hinzufuegenHaendler = e => {\n    let preisAlsZahl = Number(preis.replace(',', '.'));\n    if (isNaN(preisAlsZahl)) return;\n    hinzufuegen({\n      beschreibung,\n      preis: preisAlsZahl\n    });\n    beschreibungSetzen('');\n    preisSetzen('');\n    livePreisSetzen(0);\n  };\n\n  return React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    value: beschreibung,\n    onChange: beschreibungHaendler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    value: preis,\n    onChange: preisHaendler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(InputGroup.Append, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: hinzufuegenHaendler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, titel)));\n}\n\n;\nexport default Eingabe;","map":{"version":3,"sources":["/home/tawfek/Downloads/exercises/fbw9habu/src/component/Eingabe.js"],"names":["React","Button","FormControl","InputGroup","Eingabe","PreisSetzen","hinzufuegen","titel","beschreibung","beschreibungSetzen","useState","preis","preisSetzen","beschreibungHaendler","e","target","value","preisHaendler","preisAlsZahl","Number","replace","livePreisSetzen","isNaN","hinzufuegenHaendler"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,UAA9B,QAAgD,iBAAhD;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA,WAAD;AAAaC,EAAAA,WAAb;AAAyBC,EAAAA;AAAzB,CAAjB,EAAiD;AAE/C,QAAM,CAACC,YAAD,EAAcC,kBAAd,IAAoCT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA1C;AACA,QAAM,CAACC,KAAD,EAAOC,WAAP,IAA0BZ,KAAK,CAACU,QAAN,CAAe,EAAf,CAAhC;;AAEA,QAAMG,oBAAoB,GAAIC,CAAD,IAC3BL,kBAAkB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CADpB;;AAGA,QAAMC,aAAa,GAAIH,CAAD,IAAO;AAC3B,QAAIH,KAAK,GAAGG,CAAC,CAACC,MAAF,CAASC,KAArB;AACAJ,IAAAA,WAAW,CAACD,KAAD,CAAX;AACA,QAAIO,YAAY,GAAGC,MAAM,CAACR,KAAK,CAACS,OAAN,CAAc,GAAd,EAAkB,GAAlB,CAAD,CAAzB;AACAC,IAAAA,eAAe,CAAGC,KAAK,CAACJ,YAAD,CAAL,GAAqB,CAArB,GAAyBA,YAA5B,CAAf;AAED,GAND;;AAQA,QAAMK,mBAAmB,GAAGT,CAAC,IAAI;AAC/B,QAAII,YAAY,GAAGC,MAAM,CAACR,KAAK,CAACS,OAAN,CAAc,GAAd,EAAkB,GAAlB,CAAD,CAAzB;AACA,QAAKE,KAAK,CAACJ,YAAD,CAAV,EAA2B;AAAWZ,IAAAA,WAAW,CAAC;AAACE,MAAAA,YAAD;AAAcG,MAAAA,KAAK,EAACO;AAApB,KAAD,CAAX;AACtCT,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAG,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAS,IAAAA,eAAe,CAAC,CAAD,CAAf;AACD,GAND;;AAQA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEb,YAApB;AAAkC,IAAA,QAAQ,EAAEK,oBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,KAApB;AAA2B,IAAA,QAAQ,EAAEM,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuChB,KAAvC,CADF,CAHF,CADF;AAQA;;AAAA;AAEF,eAAeH,OAAf","sourcesContent":["\nimport React from 'react'\nimport { Button, FormControl, InputGroup } from 'react-bootstrap'\n\nfunction Eingabe({PreisSetzen,hinzufuegen,titel}){\n\n  const [beschreibung,beschreibungSetzen] = React.useState('');\n  const [preis,preisSetzen]     = React.useState('');\n\n  const beschreibungHaendler = (e) =>\n    beschreibungSetzen(e.target.value)\n\n  const preisHaendler = (e) => {\n    let preis = e.target.value;\n    preisSetzen(preis);\n    let preisAlsZahl = Number(preis.replace(',','.'));\n    livePreisSetzen ( isNaN(preisAlsZahl)? 0 : preisAlsZahl );\n   \n  }\n\n  const hinzufuegenHaendler = e => {\n    let preisAlsZahl = Number(preis.replace(',','.'));\n    if ( isNaN(preisAlsZahl) ) return;    hinzufuegen({beschreibung,preis:preisAlsZahl});\n    beschreibungSetzen('');\n    preisSetzen('');\n    livePreisSetzen(0);\n  }\n\n  return (\n    <InputGroup>\n      <FormControl value={beschreibung} onChange={beschreibungHaendler}/>\n      <FormControl value={preis} onChange={preisHaendler}/>\n      <InputGroup.Append>\n        <Button onClick={hinzufuegenHaendler}>{titel}</Button>\n      </InputGroup.Append>\n    </InputGroup>\n)};\n\nexport default Eingabe;\n"]},"metadata":{},"sourceType":"module"}